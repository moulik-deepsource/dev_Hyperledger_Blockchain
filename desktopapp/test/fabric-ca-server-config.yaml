# This file is Generate from YamlClass used to configuration file for the fabric-ca-server command.
# Base on fabric-ca-server-config.yaml version:1.4.7
 
################################################################### 

 # Version of config file 
version: 1.4.7

 # Server's listening port 
port: 7052

 # Cross-Origin Resource Sharing (CORS) 
cors:
  enabled: false
  origins:
    - '*'

 # Enables debug logging  
debug: true

 # Size limit of an acceptable CRL in bytes 
crlsizelimit: 512000

 # TLS section for the server's listening port 
tls:
  enabled: true
  certfile: tls-ca-cert.pem
  keyfile: tls-ca-key.pem
  clientauth:
    type: noclientcert
    certfiles: {}

 #  The CA section contains information related to the Certificate Authority 
ca:
  name: null
  keyfile: ca-key.pem
  certfile: ca-cert.pem
  chainfile: ca-chain.pem

 #  The gencrl REST endpoint configuration options 
crl:
  expiry: 24h

#  The registry section controls how the fabric-ca-server things 
registry:
  maxenrollments: -1
  identities:
    - name: admin
      pass: adminpw
      type: client
      affiliation: ''
      attrs:
        hf.Registrar.Roles: '*'
        hf.Registrar.DelegateRoles: '*'
        hf.Revoker: true
        hf.IntermediateCA: true
        hf.GenCRL: true
        hf.Registrar.Attributes: '*'
        hf.AffiliationMgr: true

# Database section  Supported types are: 'sqlite3', 'postgres', and 'mysql'. 
db:
  type: sqlite3
  datasource: fabric-ca-server.db
  tls:
    enabled: false
    certfiles:
      - db-server-cert.pem
    client:
      certfile: db-client-cert.pem
      keyfile: db-client-key.pem

 #  LDAPConfig section
ldap:
  enabled: false
  url: 'ldap://<adminDN>:<adminPassword>@<host>:<port>/<base>'
  tls:
    certfiles:
      - ldap-server-cert.pem
    client:
      certfile: ldap-client-cert.pem
      keyfile: ldap-client-key.pem
  attribute:
    name:
      - uid
      - member
  converters:
    - name: null
      value: null
  maps:
    groups:
      - name: null
        value: null

 # Affiliations specified in this section are specified as maps.
affilations:
  businessunit1:
    department1:
      - team1
  businessunit2:
    - department2
    - department3

 # Signing section is used to sign certificates 
signing:
  default:
    usage:
      - digital signature
    expiry: 8760h
  profiles:
    ca:
      usage:
        - cert sign
        - crl sign
      expiry: 43800h
      caconstraint:
        isca: true
        maxpathlen: 0
  tls:
    usage:
      - signing
      - key encipherment
      - server auth
      - client auth
      - key agreement
    expiry: 8760h

 #  Certificate Signing Request (CSR) section.
csr:
  cn: demoname
  keyrequest:
    algo: ecdsa
    size: 256
  names:
    - C: US
      ST: '"North Carolina"'
      L: '"demo"'
      O: Hyperledger
      OU: Fabric
  host:
    - localhost
  ca:
    expiry: 131400h
    pathlength: 1

 # Credential. This section specifies configuration for the issuer component 
idemix:
  rhpoolsize: 1000
  nonceexpiration: 15s
  noncesweepinterval: 15m

 # BCCSP (BlockChain Crypto Service Provider) section is used to select which 
 # crypto library implementation to use 
bccsp:
  default: SW
  sw:
    hash: SHA2
    security: 256
    filekeystore:
      keystore: msp/keystore

 # Multi CA section 
cacount: null
cafiles: null

 # Intermediate CA section 
intermediate:
  parentserver:
    url: null
    caname: null
  enrollment:
    hosts: null
    profile: null
    label: null
  tls:
    certfiles:
      - ica-server-cert.pem
    client:
      certfile: ica-client-cert.pem
      keyfile: ica-client-key.pem

 # CA configuration section 
cfg:
  identities:
    passwordattempts: 10

 # Operations section 
operations:
  listenAddress: '127.0.0.1:9443'
  tls:
    enabled: false
    cert:
      file: null
    key:
      file: null
    clientAuthRequired: false
    clientRootCAs:
      files: []

 #    Metrics section 
metrics:
  provider: disabled
  statsd:
    network: udp
    address: '127.0.0.1:8125'
    writeInterval: 10s
    prefix: server
